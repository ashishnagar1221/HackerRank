'use strict';

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', inputStdin => {
    inputString += inputStdin;
});

process.stdin.on('end', _ => {
    inputString = inputString.replace(/\s*$/, '')
        .split('\n')
        .map(str => str.replace(/\s*$/, ''));

    main();
});

function readLine() {
    return inputString[currentLine++];
}

// Complete the insertionSort1 function below.
function insertionSort1(n, arr) {
var ele = arr[arr.length-1];
    var inserted = false;
    for(var i = arr.length-2; i>=0; i--){
        if(arr[i]>ele){
            arr[i+1] = arr[i]
        } else {
            inserted = true;
            arr[i+1] = ele;
            break;
        }
        console.log(arr.join(' '));
    }
    if(!inserted){
        arr[0] = ele;
    }
    console.log(arr.join(' '));

}

function main() {
    const n = parseInt(readLine(), 10);

    const arr = readLine().split(' ').map(arrTemp => parseInt(arrTemp, 10));

    insertionSort1(n, arr);
}
